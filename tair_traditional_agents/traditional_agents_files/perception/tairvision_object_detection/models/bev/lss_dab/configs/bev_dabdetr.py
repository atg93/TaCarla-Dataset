from tairvision.models.bev.lss.training.config import CfgNode as CN


def get_bev_dabdetr_cfg_defaults():
    DYNAMIC_TRANSFORMER_DECODER = CN()

    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER = CN()
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.D_MODEL = 256
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.NHEAD = 8
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.NUM_ENCODER_LAYERS = 6
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.NUM_DECODER_LAYERS = 6
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.DIM_FEEDFORWARD = 2048
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.DROPOUT = 0.0
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.ACTIVATION = "relu"
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.RETURN_INTERMEDIATE_DEC = True
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.NUM_FEATURE_LEVELS = 4
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.DEC_N_POINTS = 4
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.ENC_N_POINTS = 4
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.TWO_STAGE = False
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.TWO_STAGE_NUM_PROPOSALS = 300
    DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.USE_DAB = True

    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG = CN()
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.NUM_QUERIES = 300
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.NUM_FEATURE_LEVELS = DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.NUM_FEATURE_LEVELS
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.AUX_LOSS = True
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.TWO_STAGE = DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.TWO_STAGE
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.USE_DAB = DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.USE_DAB
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.NUM_PATTERNS = 0
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.RANDOM_REFPOINTS_XY = False
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.SEGMENTATION = True
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.FREEZE_DETR = False
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.EXTRA_REGRESSION_TARGET = False
    DYNAMIC_TRANSFORMER_DECODER.DAB_CONFIG.EXTRA_REGRESSION_TARGET_LENGTH = 4

    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD = CN()
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.NAME = "MaskFormerLikeHeadIterative"
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG = CN()
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.HIDDEN_DIM = DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.D_MODEL
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.CONV_DIM = DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.D_MODEL
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.MASK_DIM = DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.D_MODEL
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.IN_CHANNELS = 256
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.AUX_LOSS = True
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.MULTI_SCALE = True
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.DIFFERENT_WEIGHT = True
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.NUM_SCALE = DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.NUM_FEATURE_LEVELS
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.MASK_FEATURE_KEY = -1
    DYNAMIC_TRANSFORMER_DECODER.SEGMENTATION_HEAD.CONFIG.MUM_PRED = DYNAMIC_TRANSFORMER_DECODER.TRANSFORMER.NUM_DECODER_LAYERS

    DYNAMIC_TRANSFORMER_DECODER.POSITIONAL_ENCODING = CN()
    DYNAMIC_TRANSFORMER_DECODER.POSITIONAL_ENCODING.NORMALIZE = True
    DYNAMIC_TRANSFORMER_DECODER.POSITIONAL_ENCODING.TEMPERATURE = 10000

    NUM_POINTS = 12544

    DYNAMIC_TRANSFORMER_DECODER.MATCHER_CONFIG = CN()
    DYNAMIC_TRANSFORMER_DECODER.MATCHER_CONFIG.COST_CLASS = 2.0
    DYNAMIC_TRANSFORMER_DECODER.MATCHER_CONFIG.COST_MASK = 5.0
    DYNAMIC_TRANSFORMER_DECODER.MATCHER_CONFIG.COST_DICE = 5.0
    DYNAMIC_TRANSFORMER_DECODER.MATCHER_CONFIG.NUM_POINTS = NUM_POINTS

    DYNAMIC_TRANSFORMER_DECODER.LOSS_CONFIG = CN()
    DYNAMIC_TRANSFORMER_DECODER.LOSS_CONFIG.EOS_COEF = 0.1
    DYNAMIC_TRANSFORMER_DECODER.LOSS_CONFIG.NUM_POINTS = NUM_POINTS
    DYNAMIC_TRANSFORMER_DECODER.LOSS_CONFIG.OVERSAMPLE_RATIO = 3.0
    DYNAMIC_TRANSFORMER_DECODER.LOSS_CONFIG.IMPORTANCE_SAMPLE_RATIO = 0.75
    DYNAMIC_TRANSFORMER_DECODER.LOSS_CONFIG.losses = ["labels_ce", "efficient_masks", "boxes"]

    DYNAMIC_TRANSFORMER_DECODER.LOSS_WEIGHT_DICT = CN()
    DYNAMIC_TRANSFORMER_DECODER.LOSS_WEIGHT_DICT.LOSS_CE = 4.0
    DYNAMIC_TRANSFORMER_DECODER.LOSS_WEIGHT_DICT.LOSS_BBOX = 5.0
    DYNAMIC_TRANSFORMER_DECODER.LOSS_WEIGHT_DICT.LOSS_GIOU = 2.0
    DYNAMIC_TRANSFORMER_DECODER.LOSS_WEIGHT_DICT.LOSS_MASK = 5.0
    DYNAMIC_TRANSFORMER_DECODER.LOSS_WEIGHT_DICT.LOSS_DICE = 5.0
    DYNAMIC_TRANSFORMER_DECODER.LOSS_WEIGHT_DICT.LOSS_Z = 10.0
    DYNAMIC_TRANSFORMER_DECODER.LOSS_WEIGHT_DICT.LOSS_YAW = 1

    DYNAMIC_TRANSFORMER_DECODER.POST_PROCESSING_CONFIG = CN()
    DYNAMIC_TRANSFORMER_DECODER.POST_PROCESSING_CONFIG.OBJECT_MASK_THRESHOLD = 0.5
    DYNAMIC_TRANSFORMER_DECODER.POST_PROCESSING_CONFIG.OVERLAP_THRESHOLD = 0.8
    
    return DYNAMIC_TRANSFORMER_DECODER
